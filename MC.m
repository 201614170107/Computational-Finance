function [value] = MC(M,call,N )
% input:
% M : number of simulation
% call: if it's call option call = 1,otherwise 0
% N: number of time step

% output:
% value : the value of the option generated by the Monte Carlo
% simulation

sigma = .22; %volatility
r = .02; % interest rate
T = 0.85; % time to expire
K = 100; % the strike price
S0 = 100; % initial stock price
delta_t = T/N;
drift = r* delta_t;
sigma_sqrt_delt = sigma*sqrt(delta_t);

s_old = zeros(M,1); % old stock price
s_new = zeros(M,1); % new stock price

s_old(:,1) = S0; % the initial stock price

for i = 1:N
    s_new(:,1) = s_old(:,1).*(1 + drift + randn(M,1)*sigma_sqrt_delt);
    s_new(:,1) = max(s_new,0.0);
    s_old = s_new;
end
% then calculate the payoff at the expirary.
if call == 1
    payoff = max(s_new(:,1) - K,0);
else
    payoff = max(K - s_new(:,1),0);
end

expected_payoff = sum(payoff,1)/M;
value = exp(-r*T)*expected_payoff;

mu = value % the expected value of the option
std_dev = std(payoff * exp(-r*T))

left = mu - 2.58*std_dev/sqrt(M)
right = mu + 2.58*std_dev/sqrt(M)


% n_bin = 200;
% hist(s_new,n_bin);
% 
% std_dev = std(s_new);
% disp(sprintf('standard deviation:  %.5\n',std_dev));


end

